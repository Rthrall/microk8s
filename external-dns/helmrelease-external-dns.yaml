apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: external-dns
  namespace: external-dns
spec:
  chart:
    spec:
      chart: external-dns
      version: 5.1.x
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
  interval: 15m
  timeout: 5m
  releaseName: external-dns
  values:
    global:
      imageRegistry: ''
      imagePullSecrets: []
    nameOverride: ''
    fullnameOverride: ''
    clusterDomain: cluster.local
    commonLabels: {}
    commonAnnotations: {}
    extraDeploy: []
    kubeVersion: ''
    watchReleaseNamespace: false
    useDaemonset: false
    image:
      registry: docker.io
      repository: bitnami/external-dns
      tag: 0.14.0-debian-11-r4
      digest: ''
      pullPolicy: IfNotPresent
      pullSecrets: []
    hostAliases: []
    updateStrategy: {}
    command: []
    args: []
    sources:
      - crd
      - service
      - ingress
    provider: cloudflare
    initContainers: []
    sidecars: []
    namespace: ''
    fqdnTemplates: []
    containerPorts:
      http: 7979
    combineFQDNAnnotation: false
    ignoreHostnameAnnotation: false
    publishInternalServices: false
    publishHostIP: false
    serviceTypeFilter: []
    validation:
      enabled: true
    akamai:
      host: ''
      accessToken: ''
      clientToken: ''
      clientSecret: ''
      secretName: ''
    alibabacloud:
      accessKeyId: ''
      accessKeySecret: ''
      regionId: ''
      vpcId: ''
      secretName: ''
      zoneType: ''
    aws:
      credentials:
        secretKey: ''
        accessKey: ''
        mountPath: /.aws
        secretName: ''
        accessKeyIDSecretRef:
          name: ''
          key: ''
        secretAccessKeySecretRef:
          name: ''
          key: ''
      region: us-east-1
      zoneType: ''
      assumeRoleArn: ''
      roleArn: ''
      apiRetries: 3
      batchChangeSize: 1000
      zonesCacheDuration: 0
      zoneTags: []
      preferCNAME: ''
      evaluateTargetHealth: ''
      dynamodbTable: ''
      dynamodbRegion: ''
    azure:
      secretName: ''
      cloud: ''
      resourceGroup: ''
      tenantId: ''
      subscriptionId: ''
      aadClientId: ''
      aadClientSecret: ''
      useWorkloadIdentityExtension: false
      useManagedIdentityExtension: false
      userAssignedIdentityID: ''
    civo:
      apiToken: ''
      secretName: ''
    cloudflare:
      apiToken: ''
      apiKey: ''
      secretName: ''
      email: ''
      proxied: true
    coredns:
      etcdEndpoints: 'http://etcd-extdns:2379'
      etcdTLS:
        enabled: false
        autoGenerated: false
        secretName: etcd-client-certs
        mountPath: /etc/coredns/tls/etcd
        caFilename: ca.crt
        certFilename: cert.pem
        keyFilename: key.pem
    designate:
      username: ''
      password: ''
      applicationCredentialId: ''
      applicationCredentialSecret: ''
      authUrl: ''
      regionName: ''
      userDomainName: ''
      projectName: ''
      authType: ''
      customCAHostPath: ''
      customCA:
        enabled: false
        content: ''
        mountPath: /config/designate
        filename: designate-ca.pem
    exoscale:
      apiKey: ''
      apiToken: ''
      secretName: ''
    digitalocean:
      apiToken: ''
      secretName: ''
    google:
      project: ''
      batchChangeSize: 1000
      serviceAccountSecret: ''
      serviceAccountSecretKey: credentials.json
      serviceAccountKey: ''
      zoneVisibility: ''
    hetzner:
      token: ''
      secretName: ''
      secretKey: hetzner_token
    infoblox:
      wapiUsername: admin
      wapiPassword: ''
      gridHost: ''
      view: ''
      secretName: ''
      domainFilter: ''
      nameRegex: ''
      noSslVerify: false
      wapiPort: ''
      wapiVersion: ''
      wapiConnectionPoolSize: ''
      wapiHttpTimeout: ''
      maxResults: ''
    linode:
      apiToken: ''
      secretName: ''
    ns1:
      minTTL: 10
      apiKey: ''
      secretName: ''
    pihole:
      server: ''
      tlsSkipVerify: ''
      secretName: ''
    oci:
      region: ''
      tenancyOCID: ''
      userOCID: ''
      compartmentOCID: ''
      privateKey: |
        -----BEGIN RSA PRIVATE KEY-----
        -----END RSA PRIVATE KEY-----
      privateKeyFingerprint: ''
      privateKeyPassphrase: ''
      secretName: ''
    ovh:
      consumerKey: ''
      applicationKey: ''
      applicationSecret: ''
      secretName: ''
    scaleway:
      scwAccessKey: ''
      scwSecretKey: ''
    rfc2136:
      host: ''
      port: 53
      zone: ''
      tsigSecret: ''
      secretName: ''
      tsigSecretAlg: hmac-sha256
      tsigKeyname: rfc2136_tsig_secret
      tsigAxfr: true
      minTTL: 0s
      rfc3645Enabled: false
      kerberosConfig: ''
      kerberosUsername: ''
      kerberosPassword: ''
      kerberosRealm: ''
    pdns:
      apiUrl: ''
      apiPort: '8081'
      apiKey: ''
      secretName: ''
    transip:
      account: ''
      apiKey: ''
    vinyldns:
      host: ''
      accessKey: ''
      secretKey: ''
    domainFilters: []
    excludeDomains: []
    regexDomainFilter: ''
    regexDomainExclusion: ''
    zoneNameFilters: []
    zoneIdFilters: []
    annotationFilter: ''
    labelFilter: ''
    ingressClassFilters: []
    managedRecordTypesFilters: []
    dryRun: false
    triggerLoopOnEvent: false
    interval: 1m
    logLevel: info
    logFormat: text
    policy: upsert-only
    registry: txt
    txtPrefix: ''
    txtSuffix: ''
    txtOwnerId: ''
    forceTxtOwnerId: false
    extraArgs: {}
    extraEnvVars: []
    extraEnvVarsCM: ''
    extraEnvVarsSecret: ''
    lifecycleHooks: {}
    schedulerName: ''
    topologySpreadConstraints: []
    replicaCount: 1
    podAffinityPreset: ''
    podAntiAffinityPreset: soft
    nodeAffinityPreset:
      type: ''
      key: ''
      values: []
    affinity: {}
    nodeSelector: {}
    tolerations: []
    podAnnotations: {}
    podLabels: {}
    priorityClassName: ''
    secretAnnotations: {}
    crd:
      create: true
      apiversion: ''
      kind: ''
    service:
      enabled: true
      type: ClusterIP
      ports:
        http: 7979
      nodePorts:
        http: ''
      clusterIP: ''
      externalIPs: []
      externalName: ''
      loadBalancerIP: ''
      loadBalancerSourceRanges: []
      externalTrafficPolicy: Cluster
      extraPorts: []
      annotations: {}
      labels: {}
      sessionAffinity: None
      sessionAffinityConfig: {}
    serviceAccount:
      create: true
      name: ''
      annotations: {}
      automountServiceAccountToken: true
      labels: {}
    rbac:
      create: true
      clusterRole: true
      apiVersion: v1
      pspEnabled: false
    containerSecurityContext:
      enabled: true
      runAsUser: 1001
      runAsNonRoot: true
      privileged: false
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: false
      capabilities:
        drop:
          - ALL
      seccompProfile:
        type: RuntimeDefault
    podSecurityContext:
      enabled: true
      fsGroup: 1001
    resources:
      limits: {}
      requests: {}
    livenessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 2
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    startupProbe:
      enabled: false
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 6
      successThreshold: 1
    customLivenessProbe: {}
    customReadinessProbe: {}
    customStartupProbe: {}
    extraVolumes: []
    extraVolumeMounts: []
    podDisruptionBudget: {}
    metrics:
      enabled: false
      podAnnotations: {}
      serviceMonitor:
        enabled: false
        namespace: ''
        interval: ''
        scrapeTimeout: ''
        selector: {}
        metricRelabelings: []
        relabelings: []
        honorLabels: false
        labels: {}
        jobLabel: ''
      googlePodMonitor:
        enabled: false
        namespace: ''
        interval: 60s
        endpoint: /metrics
